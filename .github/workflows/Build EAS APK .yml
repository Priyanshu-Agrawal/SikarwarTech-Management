name: EAS Build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install jq

      - name: Delete old release
        run: |
          RELEASE_ID=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/beta" \
            -H "Authorization: token ${{ secrets.PAT }}" | jq '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID" \
              -H "Authorization: token ${{ secrets.PAT }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: beta
          release_name: Beta Release
          draft: false
          prerelease: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup Expo
        uses: expo/expo-github-action@v6
        with:
          expo-version: 4.x
          token: ${{ secrets.EXPO_TOKEN }}
          expo-cache: true

      - name: Install Dependencies
        run: npm ci

      - name: Install expo-dev-client
        run: npm install expo-dev-client

      - name: Remove existing SECRETS
        run: rm ./constants/SECRETS.js

      - name: Create SECRETS.js
        run: |
          echo "const SECRETS  = {" >> ./constants/SECRETS.js
          echo "    API_URL : '${{ secrets.API_URL }}'" >> ./constants/SECRETS.js
          echo "}" >> ./constants/SECRETS.js
          echo "export default SECRETS;" >> ./constants/SECRETS.js

      - name: show secrets.js
        run: cat ./constants/SECRETS.js

      - name: Build on EAS
        run: npx eas-cli build --platform android --profile preview --non-interactive --local --output debug.apk
        # run: npx eas-cli build --platform android --profile development  --non-interactive --local --output=./app-build \




      #      - name: Create Release
      #        id: create_release
      #        uses: actions/create-release@v1
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.PAT }}
      #        with:
      #          tag_name: ${{ format('beta-{0}.{1}', github.run_number, github.run_id) }}
      #          release_name: ${{ format('Beta Release {0}.{1}', github.run_number, github.run_id) }}
      #          draft: false
      #          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debug.apk
          asset_name: Sikarwar Tech Services beta .apk
          asset_content_type: application/vnd.android.package-archive
